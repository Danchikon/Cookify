version: "3"

networks:
  server:

services:
  traefik:
    image: traefik:v2.9.1
    hostname: traefik
    container_name: traefik
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    networks:
      - server
    command:
      - "--api.insecure=true"
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.letsencrypt.acme.tlsChallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=test@email.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: backend
    hostname: backend
    container_name: backend
    restart: on-failure
    networks:
      - server
    depends_on:
      - minio
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:80"
      MinioStorage__Login: $MINIO_ROOT_USER
      MinioStorage__Password: $MINIO_ROOT_PASSWORD
      MinioStorage__Endpoint: "minio"
      MinioStorage__Port: 9000
      MinioStorage__Bucket: $MINIO_BUCKET
      MinioStorage__Url: "https://minio.localhost"
      ConnectionStrings__Postgres: "Host=postgres;Database=Cookify;Username=$POSTGRES_USER;Password=$POSTGRES_PASSWORD;"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      
  postgres:
    image: postgres:15.1
    hostname: postgres
    container_name: postgres
    restart: on-failure
    networks:
      - server
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        
  pgadmin:
    image: dpage/pgadmin4:6.19
    hostname: pgadmin
    container_name: pgadmin
    restart: on-failure
    networks:
      - server
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"

  minio:
    image: minio/minio:RELEASE.2023-01-02T09-40-09Z.hotfix.5c99bdd49
    hostname: minio
    container_name: minio
    restart: on-failure
    networks:
      - server
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: $MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: $MINIO_ROOT_PASSWORD
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.localhost`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.routers.minio-console.tls.certresolver=letsencrypt"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.rule=Host(`minio.localhost`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=letsencrypt"
  
  minio-client:
    image: minio/mc:RELEASE.2023-01-28T20-29-38Z
    hostname: minio-client
    container_name: minio-client
    restart: on-failure
    networks:
      - server
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb minio/$MINIO_BUCKET;
      /usr/bin/mc anonymous set download minio/$MINIO_BUCKET;
      exit 0;
      "